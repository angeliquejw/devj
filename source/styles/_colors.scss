@import 'variables';

html {
	background:$black;
}

body {
	color:$black;
	@include respond-at(520px) {
		// background-image:url(../img/squairy_light.20.png);
		background-image:url(../img/bgnoise_lg.20.png);
	}
}

.siteHeader {
	background:$black url(../img/squairy_light.40.png);
	a {
		&, &:visited, &:hover, &:active, &:focus {
			color:$green;
		}
	}
}

.siteFooter {
	background:$black;
	.bmoreLink {
		a:hover em {
			color:$violet;
		}
		em {
			font-style: normal;
		}
	}
}

article, main {
	a {
		color:$blue;
		&:hover, &:active, &:focus {
			color:lighten($blue, 20%);
		}
	}
}

// Code via http://www.elijahmanor.com/dynamic-repeating-sass-colors/
$articleColors: $orange, $cyan, $violet, $lime;
@for $i from 1 through length($articleColors) {
	$articleColors: append($articleColors, lighten(nth($articleColors, $i), 12));
}
$articleColorsLength: length($articleColors);

article {
	border-width:9px;

	@for $i from 1 through $articleColorsLength {
		&:nth-of-type(#{$articleColorsLength}n+#{$i}) {
			background-color: nth($articleColors, $i);
			border-color: nth($articleColors, $i);
		}
	}
}

.articleListItem {
	@for $i from 1 through $articleColorsLength {
		&:nth-of-type(#{$articleColorsLength}n+#{$i}) a {
			background-color: nth($articleColors, $i);
			border-color: nth($articleColors, $i);
		}
	}
	a {
		border-width:9px;
		@include respond-at(800px) {
			&:hover {
				border-color:rgba(white,.25);
			}
		}
	}
}

article {
	&.featured {
		background-color:$white;
		@for $i from 1 through $articleColorsLength {
			&:nth-of-type(#{$articleColorsLength}n+#{$i}) {
				.container {
					border-bottom:9px solid nth($articleColors, $i);
				}
				footer {
					background-color: nth($articleColors, $i);
				}
			}
		}		
	}

	.articleSingle & {
		background-color:$lime;
		border-color:$lime;
		.container {
			background-color:$white;
		}
	}
}

.articleHeadline {
	a {
		&:visited {
			color:$blue;
		}
		&:hover {
			color:$white;
			text-shadow: 0 1px 1px rgba($black,0.4);
			.featured & {
				color:lighten($blue, 20%);
				text-shadow: none;
			}
		}
	}
}

.articleFooter {
	border:1px solid rgba($white,.25);
	.metaIntro {
		color:$white;
		opacity:.75;
		&:before {
			color:rgba($white,.6);
			content:'//';
			display: inline;
		}
	}	
	.elementWrapper {
		&:last-of-type {
			border-left:$borderTrans;
		}
		&.tagWrapper {
			border-bottom:$borderTrans;
			a {
				color:$graydk;
				&:hover {
					color:$black;
				}
			}
			@include respond-at(580px) {
				border-bottom:0;
				border-right:$borderTrans;
			}
		}
	}
}

.heading {
	main & {
		color:$grayli;
	}
}

.pageHeadline {
	color:$lime;
}

.archiveHeadline {
	border-color:$white;
	color:$white;
}

aside, .bioWrapper, .siteFooter {
	color:$grayli;
	a {
	color:$greenli;
		&:hover, &:active, &:focus {
			color:$green;
		}
	}
	@include respond-at(520px) {
		color:lighten($grayli,18);
	}
}

aside {
	background:$blue;
	border-top:9px solid $blue;
	border-bottom:9px solid $blue;
	color:lighten($grayli,18);
	@include respond-at(520px) {
		.l-sidebar & {
			background-color:transparent;
			border:0;
		}
	}
}

.bioWrapper, .tagCloudWrapper {
	border: $borderTrans;
	@include respond-at(920px) {
		.l-sidebar & {
			border:0;
		}
	}
}
