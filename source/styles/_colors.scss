@import 'libs/hover-state', 'variables';

html {
	background:$color-offblack;
}

body {
	color:$color-offblack;
	@include respond-at(520px) {
		// background-image:url(../img/squairy_light.20.png);
		background-image:url(../img/bgnoise_lg.20.png);
	}
}

.siteHeader {
	background:$color-offblack url(../img/squairy_light.40.png);
	a {
		&, &:visited, &:hover, &:active, &:focus {
			color:$color-limeli;
		}
		&:after {
			border-color: $color-limeli;
		}
	}
}

.siteFooter {
	background:$color-offblack;
	.bmoreLink {
		a {
			@include hover-state {
				em {
					color:$color-violet;
				}
			}
		}
		em {
			font-style: normal;
		}
	}
}

article, main {
	a {
		color:$color-blue;
		@include hover-state {
			color:lighten($color-blue, 20%);
		}
	}
}

// Code via http://www.elijahmanor.com/dynamic-repeating-sass-colors/
$articleColors: $color-orange, $color-cyan, $color-violet, $color-lime;
@for $i from 1 through length($articleColors) {
	$articleColors: append($articleColors, lighten(nth($articleColors, $i), 12));
}
$articleColorsLength: length($articleColors);

article {
	border-width:9px;

	@for $i from 1 through $articleColorsLength {
		&:nth-of-type(#{$articleColorsLength}n+#{$i}) {
			background-color: nth($articleColors, $i);
			border-color: nth($articleColors, $i);
		}
	}
}

.articleListItem {
	@for $i from 1 through $articleColorsLength {
		&:nth-of-type(#{$articleColorsLength}n+#{$i}) a {
			background-color: nth($articleColors, $i);
			border-color: nth($articleColors, $i);
		}
	}
	a {
		border-width:9px;
		@include respond-at(800px) {
			@include hover-state {
				border-color:rgba(white,.25);
			}
		}
	}
}

article {
	&.featured {
		background-color:$color-offwhite;
		@for $i from 1 through $articleColorsLength {
			&:nth-of-type(#{$articleColorsLength}n+#{$i}) {
				.container {
					border-bottom:9px solid nth($articleColors, $i);
				}
				footer {
					background-color: nth($articleColors, $i);
				}
			}
		}		
	}

	.articleSingle & {
		background-color:$color-lime;
		border-color:$color-lime;
		.container {
			background-color:$color-offwhite;
		}
	}
}

.articleHeadline {
	a {
		&:visited {
			color:$color-blue;
		}
		@include hover-state {
			color:$color-offwhite;
			text-shadow: 0 1px 1px rgba($color-offblack,0.4);
			.featured & {
				color:lighten($color-blue, 20%);
				text-shadow: none;
			}
		}
	}
}

.articleContent {
	code {
		background:rgba($color-lime,0.08);
		.highlight & {
			background:transparent;
		}
	}
}

.articleFooter {
	border:1px solid rgba($color-offwhite,.25);
	.metaIntro {																																																																																																																																																																																																																								
		color:$color-offwhite;
		opacity:.75;
		&:before {
			color:rgba($color-offwhite,.6);
			content:'//';
			display: inline;
		}
	}	
	.elementWrapper {
		&.geolocationWrapper {
			border-left:$borderTrans;
		}
		&.noteWrapper {
			border-top:$borderTrans;
			@include respond-at(580px) {
				border-top:0;
				border-left:$borderTrans;
			}
		}
		&.tagWrapper {
			border-bottom:$borderTrans;
			@include respond-at(580px) {
				border-bottom:0;
				border-right:$borderTrans;
			}
		}
		&.noteWrapper, &.tagWrapper {
			a {
				color:$color-greydk;
				@include hover-state {
					color:$color-offblack;
				}
			}			
		}
	}
}

.heading {
	main & {
		color:$color-greyli;
	}
}

.pageHeadline, .sectionHeadline {
	border-color:$color-offwhite;
	color:$color-offwhite;
}

aside, .bioWrapper, .siteFooter {
	color:$color-greyli;
	a {
	color:$color-limeli;
		@include hover-state {
			color:$color-lime;
		}
	}
	@include respond-at(520px) {
		color:lighten($color-greyli,18);
	}
}

aside {
	background:$color-blue;
	border-top:9px solid $color-blue;
	border-bottom:9px solid $color-blue;
	color:lighten($color-greyli,18);
	@include respond-at(520px) {
		.l-sidebar & {
			background-color:transparent;
			border:0;
		}
	}
}

.bioWrapper, .tagCloudWrapper {
	border: $borderTrans;
	@include respond-at(920px) {
		.l-sidebar & {
			border:0;
		}
	}
}
